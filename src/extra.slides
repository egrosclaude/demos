    
<section>
<h2>Variables muy diferentes</h2>
<ul>	
<li>"Tiempo en que la luz recorre una millonésima de milímetro"</li>
<ul>	
	<li>$t = e / v$</li>
	<li>$e = 1\ nm = 0,000000001\ m$</li>
	<li>$v = 300.000\ km/s = 300.000.000\ m/s$</li>
</ul>
</ul>
</section>
    
<section>
<h2>Notación científica</h2>
<ul>	
<li>$e = 0.000000001\ m$ <span class="fragment">$ = 1 \times 10^{-9}\ m$</span></li>
<li>$v = 300000000\ m/s$ <span class="fragment">$ = 3 \times 10^8\ m/s$</span></li>
<li>$t = e/v = 0.00000000000000000333\ s$</li>
<li class="fragment">$t = e / v = (1 \times 10^{-9}\ m) / (3 \times 10^8\ m/s)$</li>
<li class="fragment">$t = e / v = \frac{(1 \times 10^{-9}\ m)}{(3 \times 10^8\ m/s)}$ <span class="fragment"> $ = \frac{1}{3} \times \frac{10^{-9}\ m}{10^8\ m/s}$</span></li>
<li class="fragment">$t = 1 / 3 \times 10^{-9-8}\ s \Longrightarrow t = 0.333 \times 10^{-17}\ s$</li>
</ul>
</section>

<section>
<h2>Notación científica</h2>
<ul>	
	<li>$t = 0.333 \times 10^{-17}\ s$</li>
	<ul>
		<li>Coeficiente = $0.333$</li>
		<li>Exponente = $-17$</li>
	</ul>
	<li class="fragment">Normalización</li>
	<ul class="fragment">
		<li>$1 <= coeficiente < base$</li>
		<li>$0.333 \times 10^{-17} = 3.33 \times 10^{-18}$</li>
	</ul>
</ul>
</section>


<section>
<h2>Representación en punto flotante</h2>
<ul>	
	<li>Formato <i>IEEE 754 single precision</i>, 32 bits</li>
	<ul>
		<li>1 bit de <strong>signo</strong></li>
		<li>8 bits para el <strong>exponente</strong> (en exceso 127)</li>
		<li>23 bits para la <strong>mantisa</strong></li>
	</ul>
	<span class="fragment">
	<li>Formato <i>IEEE 754 double precision</i>, 64 bits</li>
	<ul>
		<li>1 bit de <strong>signo</strong></li>
		<li>11 bits para el <strong>exponente</strong> (en exceso 1023)</li>
		<li>52 bits para la <strong>mantisa</strong></li>
	</ul>
	</span>
</ul>
</section>


<section>
<h2>Formato <i>IEEE 754 single precision</i></h2>
<img class="plain stretch" src="img/ieee754.png">
</section>


<section> 
  <section data-transition="convex" data-transition-speed="slow">
  <h2>Decimal a punto flotante</h2>
  <ol>	
	<li>Separar el signo y escribir el valor absoluto en base 2</li>
	<li>Convertirlo a notación científica en base 2 <b>normalizada</b></li>
	<li>Expresar el exponente en notación <b>en exceso</b></li>
	<li>Guardar el coeficiente <b>sin parte entera</b> en la mantisa</li>
  </ol>
  </section>

  <section data-transition="convex" data-transition-speed="slow">
  <h2>Decimal a punto flotante</h2>
  <h3>1. Escribir el valor absoluto en base 2</h3>
  <ul>
	<li>Lo vimos al convertir un <a href="#decfrac" target="_blank">decimal fraccionario a base 2</a></li>
	<li>Separo y guardo el signo</li>
  </ul>
  </section>

  <section data-transition="convex" data-transition-speed="slow">
  <h2>Decimal a punto flotante</h2>
  <h3>2. Convertir a notación científica base 2</h3>
  <ul>
	 <li>Desplazo el punto fraccionario hasta dejar un 1 en la parte entera</li>
	 <li>Compenso la multiplicación o división por $2^k$ que hice</li>
	 <ul>
		 <li>$101.11 = 1.0111 \times 2^2$</li>
		 <li>$0.0011111 = 1.1111 \times 2^{-3}$</li>
	 </ul>
	<li>Obtuve coeficiente y exponente</li>
  </section>

  <section data-transition="convex" data-transition-speed="slow">
  <h2>Decimal a punto flotante</h2>
   <h3>3. Expresar el exponente</h3>
    <ul>	
	<li>El exponente puede ser positivo o negativo</li>
	<li>Se representa <strong>en exceso a 127</strong></li>
	<li>&rarr; Se le suma 127 para obtener un número no negativo </li>
    </ul>
</section>

  <section data-transition="convex" data-transition-speed="slow">
  <h2>Decimal a punto flotante</h2>
    <h3>4. Guardar la mantisa</h3>
    <ul>	
	<li>El primer dígito del coeficiente es siempre 1</li>
	<li>&rarr; no hace falta almacenarlo</li>
	<li>Se guarda $coeficiente - 1$,  completando con ceros</li>
    </ul>
</section>
</section>

<!--
<section>
<h2>Ejemplo de Punto Flotante</h2>
    <div align="center" class="post_it">$n = -5.5$</div>
    <ol>	
	<li class="fragment"><span class="post_it">$s = 1$</span><span class="fragment">; $|n| = 5.5_{(10} = 101.1_{(2}$</span></li>
	<li class="fragment">$101.1 = 1.011 \times  2^2$</li>
	<li class="fragment post_it">$e = 2 + 127 = 129$</li>
	<li class="fragment">$1.011 - 1 = .011$ <span class="fragment post_it">&rarr; $m = 011000...$</span></li>
    </ol>
</section>
--> 

<section id="experimento">
<h2>Ejemplo Punto Flotante $n = -5.5$</h2>
    <ol>	
	<li>Separar el signo y escribir el valor absoluto en base 2</li>
	    <ul>	
	<li class="fragment"><span class="post_it">$s = 1$</li>
	<li class="fragment">$|n| = 5.5_{(10} = 101.1_{(2}$</li>
		</ul>
	<li>Convertirlo a notación científica en base 2 <b>normalizada</b></li>
	    <ul>	
	<li class="fragment">$101.1 = 1.011 \times  2^2$</li>
		</ul>
	<li>Expresar el exponente en notación <b>en exceso</b></li>
	    <ul>	
	<li class="fragment post_it">$e = 2 + 127 = 129$</li>
		</ul>
	<li>Guardar el coeficiente <b>sin parte entera</b> en la mantisa</li>
	    <ul>	
	<li class="fragment">$1.011 - 1 = .011$ <span class="fragment post_it">&rarr; $m = 011000...$</span></li>
		</ul>
    </ol>
</section>

<section>
<h2>Ejemplo de Punto Flotante</h2>
	<div align="center" class="post_it">$n = -5.5$</div>
	<div align="center"> s = 1, e = 129, m = 011000... </div>
	<img class="plain stretch" src="img/ejemploFP.png">
</section>

<section>
<h2>Resultado en hexadecimal</h2>
	<img class="plain stretch" src="img/ejemploFPhexa.png">
</section>
    
    
<section>
<h2>Punto Flotante &rarr; decimal</h2>
<ul>	
	<li>Usando $s$, $e$ y $m$:</li>
<div class="post_it" align="center">$n = (-1)^s \times 2^{(e-127)} \times (1 + m)$</div>
	<li class="fragment">$s = 1   \Longrightarrow       (-1)^s = -1$</li>
	<li class="fragment">$e = 129      \Longrightarrow                   2^{(e-127)} = 2^2$</li>
	<li class="fragment">$m = 011000...      \Longrightarrow            1.m = 1.011000...$</li>
	<li class="fragment">Resulta $n = (-1) \times 2^2 \times 1.011000..._{(2} =$ $(-1) \times 101.1000..._{(2} =$ $(-1) \times 5.5 = -5.5$</li>
</ul>
</section>

<section>
<h2>Error de aproximación</h2>
<pre><code>
  $ python
  Python 2.7.9 (default, Mar  1 2015, 12:57:24) 
  [GCC 4.9.2] on linux2
  Type "help", "copyright", "credits" or "license" for more information.
  >>> a = 0.1
  >>> b = 0.2
  >>> c = a + b
  >>> c == a + b
  True
  >>> c == 0.3
  False
  >>> c
  0.30000000000000004

</code></pre>
</section>

<section data-transition="convex-in convex-out">
 <img src="img/placa1.png" class="plain stretch">
</section> 

<!--
<section>
<h2>Cálculo de punto flotante</h2>
<span id="ieee754Calc">
<table>
<tr><td>Decimal</td><td class="TKNumberField" data-var="decimal"></td></tr>
<tr><td>Signo</td><td data-var="sign"></td></tr>
<tr><td>Exponente</td><td data-var="exponent"></td></tr>
<tr><td>Mantisa</td><td data-var="mantissa"></td></tr>
<tr><td>Hexa</td><td data-var="hexa"></td></tr>
</table>        
    <p class="post_it" data-var="math" style="text-align: center;" id="ieee754Formula">$ $</p>  
</span>
</section>
-->

 <section>
 <h2>Cálculo de punto flotante</h2>
 <div class="tangle" id="ieee754Calc">
         <script type="text/javascript" src="ieee754.js"></script>
         <!--
         {
                 "initialize":"function(container) {
                         var rootElement = document.getElementById('ieee754Calc');
                         var model = {
                                 initialize: function() {
                                         this.decimal = 0;
                                         this.sign = 0;
                                         this.exponent = 0;
                                         this.mantissa = 0;
                                         this.hexa = '00000000';
                                 },
                                 update: function() {
                                         var e = this.decimal;
                                         var n = parseFloat(e);
                                         var f = packIEEE754(e, 8, 23);
                                         this.hexa = hexaString(f);
                                         this.sign = f[0];
                                         this.exponent = f.slice(1,9).join('');
                                         this.mantissa = f.slice(9,32).join('');
                                         var mstr;
                                         if (n === 0) {
                                                 return;
                                         } else if (n !== n) {
                                                 mstr = 'NaN';
                                         } else if (n === Infinity) {
                                                 mstr = '\\infty';
                                         } else if (n === -Infinity) {
                                                 mstr = '- \\infty';
                                         } else {
                                                 mstr = mathString(e, this.sign, this.exponent, this.mantissa);
                                         }
                                         var mathfield = MathJax.Hub.getAllJax('ieee754Formula')[0];
                                         MathJax.Hub.Queue(['Text',mathfield,mstr]);
                                 }
                         };
                         var tangle=new Tangle(rootElement, model);
                   }"
         }
         -->
         <table>
                 <tr><td>Decimal</td><td class="TKNumberField" data-var="decimal"></td></tr>
                 <tr><td>Signo</td><td data-var="sign"></td></tr>
                 <tr><td>Exponente</td><td data-var="exponent"></td></tr>
                 <tr><td>Mantisa</td><td data-var="mantissa"></td></tr>
                 <tr><td>Hexa</td><td data-var="hexa"></td></tr>
         </table>
         <p class="post_it" data-var="math" style="text-align: center;" id="ieee754Formula">$ $</p>
 </div>
 </section>
 

 

<section>
<h2>Punto flotante, casos especiales</h2>

<table>
<tr><th>Clase de números</th><th>Exponente</th><th>Mantisa</th><th>Signo</th></tr>
<tr><td>Ceros</td><td align="center">$0$</td><td align="center">$0$</td><td>$+/-$</td></tr>
<tr><td>Desnormalizados</td><td align="center">$0$</td><td align="center">$\neq 0$</td><td>$+/-$</td></tr>
<tr><td>Normalizados</td><td align="center">$\neq 0$</td><td align="center">Cualquiera</td><td>$+/-$</td></tr>
<tr><td>Infinito</td><td align="center">$1...1$</td><td align="center">$0$</td><td>$+/-$</td></tr>
<tr><td>NaN (Not a Number)</td><td align="center">$1...1$</td><td align="center">$\neq 0$</td><td>$+/-$</td></tr>
</table>
</section>

<section data-background="#3c53b5" data-background-transition="zoom">
<h2>Preguntas</h2>
<ul>
	<li>¿Cuál es el RR de IEEE754, precisión simple?</li>
	<li>Usando el calculador de IEEE754 contenido en este material, o cualquier otro:</li>
	<ol>
		<li class="fragment">¿Qué pasa con el resultado a medida que agregamos <b>muchos</b> decimales?</li>
		<li class="fragment">¿Qué pasa con el resultado si ingresamos números <b>enormes</b> como 1e30 (que significa $1 \times 10^{30}$), 1e35, etc.?</li>
		<li class="fragment">Si ingresamos el dato $0.1$, ¿qué resultado da $(-1)^s \times 2^{e-127} \times (1+m)$? ¿Se reconstruye exactamente el valor $0.1$? ¿Cuál es el error en este caso?</li>
	</ol>
</ul>
</section>

<section data-background="#00CCFF" data-background-transition="zoom">
<h2>Representación de datos numéricos</h2>
<ul>
	<li>Enteros</li>
	<ul>
		<li>Signo-Magnitud &#10004;</li>
		<li>Complemento a 2 &#10004;</li>
		<li>Exceso a $2^{n-1}$ &#10004; </li>
	</ul>
	<li class="fragment">Fraccionarios</li>
	<ul>
		<li class="fragment">Punto fijo &#10004;</li>
		<li class="fragment">Punto flotante &#10004;</li>
	</ul>
</ul>
</section>

<section>
<h2>Referencias</h2>
<ul>
<li><a href="http://pedco.fi.uncoma.edu.ar/mod/resource/view.php?id=145680" target="_blank">Apunte de Cátedra: Representación de Datos Numéricos</a></li>
<li><a href="https://es.wikipedia.org/wiki/Complemento_a_dos" target="_blank">Wikipedia: Complemento a dos</a></li>
<li><a href="https://es.wikipedia.org/wiki/Representaci%C3%B3n_de_n%C3%BAmeros_con_signo" target="_blank">Wikipedia: Representación de números con signo</li>
<li><a href="http://perso.ens-lyon.fr/jean-michel.muller/goldberg.pdf" target="_blank">What Every Computer Scientist Should Know About Floating-Point Arithmetic</a>, David Goldberg, Xerox PARC, 1991</li>
</ul>
</section>
