<!-- INCLUDE src/reveal.header -->

<section>
<h2>Notación en exceso</h2>
<div class="snapsvg stretch" width="100%" height="100%">
	<svg id="bias" viewBox="0 0 100 50" width="100%" height="100%"></svg>
	<script src="src/bias.js"></script>
	<!-- {
		"width" : 100,
		"height": 50,
		"svg" : "#bias",
		"initialize": "function(container, options) { Bias(container, options) }"
	} -->
</div>
<aside data-markdown class="notes">
###Conversión entre exceso y decimal

Una vez establecido un sistema en exceso que representa el intervalo $[a, b]$ en $k$ bits:

- Para calcular la secuencia binaria que corresponde a un valor decimal $d$, a $d$ **le restamos** $a$ y luego convertimos el resultado (que será **no negativo**) a **SS(k)**, es decir, a binario sin signo sobre $k$ bits.
- Para calcular el valor decimal $d$ representado por una secuencia binaria, convertimos la secuencia a decimal como en **SS(k)**, y al resultado (que será **no negativo**) le **sumamos** el valor de $a$.

**Ejemplos**

Representemos en sistema en exceso el intervalo $[10, 25]$ (que contiene $25 - 10 + 1 = 16$ enteros). Como necesitamos 16 secuencias binarias, usaremos 4 bits que producirán las secuencias 0000, 0001, ..., 1111.

- Para calcular la secuencia que corresponde al número 20, hacemos $20 - 10 = 10$ y el resultado será la secuencia **1010**.
- Para calcular el valor decimal que está representando la secuencia **1011**, convertimos 1011 a decimal, que es 11, y le sumamos 10; el resultado es $21$.

Representemos en sistema en exceso el intervalo $[-3, 4]$ (que contiene $4 -(-3) + 1 = 8$ enteros). Como necesitamos 8 secuencias binarias, usaremos 3 bits que producirán las secuencias 000, 001, ..., 111.

- Para calcular la secuencia que corresponde al número 2, hacemos $2 -(-3) = 5$ y el resultado será la secuencia **101**.
- Para calcular el valor decimal que está representando la secuencia **011**, convertimos 011 a decimal, que es 3, y le sumamos -3; el resultado es $0$.
</aside>
</section>

<!-- INCLUDE src/reveal.trailer -->
